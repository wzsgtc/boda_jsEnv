
bodavm.memory.notDefined['CSSStyleDeclaration']=new CSSStyleDeclaration('bobo')


bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "accentColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "additiveSymbols", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "alignContent", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "alignItems", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "alignSelf", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "alignmentBaseline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "all", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationComposition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationDelay", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationDirection", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationDuration", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationFillMode", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationIterationCount", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationName", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationPlayState", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationRange", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationRangeEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationRangeStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationTimeline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "animationTimingFunction", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "appRegion", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "appearance", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "ascentOverride", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "aspectRatio", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backdropFilter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backfaceVisibility", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "background", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundAttachment", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundBlendMode", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundClip", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundImage", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundPositionX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundPositionY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundRepeat", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundRepeatX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundRepeatY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "backgroundSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "basePalette", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "baselineShift", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "baselineSource", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "blockSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "border", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockEndColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockEndStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockEndWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockStartColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockStartStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockStartWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBlockWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBottom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBottomColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBottomLeftRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBottomRightRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBottomStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderBottomWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderCollapse", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderEndEndRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderEndStartRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderImage", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderImageOutset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderImageRepeat", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderImageSlice", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderImageSource", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderImageWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineEndColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineEndStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineEndWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineStartColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineStartStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineStartWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderInlineWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderLeft", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderLeftColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderLeftStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderLeftWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderRight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderRightColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderRightStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderRightWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderSpacing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderStartEndRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderStartStartRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderTop", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderTopColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderTopLeftRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderTopRightRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderTopStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderTopWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "borderWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "bottom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "boxShadow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "boxSizing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "breakAfter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "breakBefore", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "breakInside", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "bufferedRendering", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "captionSide", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "caretColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "clear", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "clip", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "clipPath", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "clipRule", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "color", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "colorInterpolation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "colorInterpolationFilters", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "colorRendering", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "colorScheme", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnCount", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnFill", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnGap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnRule", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnRuleColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnRuleStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnRuleWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnSpan", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columnWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "columns", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "contain", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containIntrinsicBlockSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containIntrinsicHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containIntrinsicInlineSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containIntrinsicSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containIntrinsicWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "container", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containerName", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "containerType", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "content", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "contentVisibility", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "counterIncrement", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "counterReset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "counterSet", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "cursor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "cx", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "cy", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "d", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "descentOverride", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "direction", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "display", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "dominantBaseline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "emptyCells", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fallback", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fill", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fillOpacity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fillRule", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "filter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flex", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flexBasis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flexDirection", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flexFlow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flexGrow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flexShrink", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "flexWrap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "float", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "floodColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "floodOpacity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "font", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontDisplay", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontFamily", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontFeatureSettings", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontKerning", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontOpticalSizing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontPalette", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontStretch", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontSynthesis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontSynthesisSmallCaps", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontSynthesisStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontSynthesisWeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariant", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariantAlternates", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariantCaps", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariantEastAsian", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariantLigatures", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariantNumeric", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontVariationSettings", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "fontWeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "forcedColorAdjust", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "grid", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridArea", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridAutoColumns", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridAutoFlow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridAutoRows", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridColumn", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridColumnEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridColumnGap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridColumnStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridGap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridRow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridRowEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridRowGap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridRowStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridTemplate", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridTemplateAreas", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridTemplateColumns", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "gridTemplateRows", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "height", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "hyphenateCharacter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "hyphenateLimitChars", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "hyphens", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "imageOrientation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "imageRendering", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "inherits", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "initialLetter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "initialValue", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "inlineSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "inset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "insetBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "insetBlockEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "insetBlockStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "insetInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "insetInlineEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "insetInlineStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "isolation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "justifyContent", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "justifyItems", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "justifySelf", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "left", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "letterSpacing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "lightingColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "lineBreak", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "lineGapOverride", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "lineHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "listStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "listStyleImage", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "listStylePosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "listStyleType", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "margin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginBlockEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginBlockStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginBottom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginInlineEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginInlineStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginLeft", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginRight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marginTop", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "marker", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "markerEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "markerMid", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "markerStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "mask", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "maskType", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "mathDepth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "mathShift", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "mathStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "maxBlockSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "maxHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "maxInlineSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "maxWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "minBlockSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "minHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "minInlineSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "minWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "mixBlendMode", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "negative", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "objectFit", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "objectPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "objectViewBox", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "offset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "offsetDistance", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "offsetPath", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "offsetRotate", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "opacity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "order", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "orphans", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "outline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "outlineColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "outlineOffset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "outlineStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "outlineWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overflow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overflowAnchor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overflowClipMargin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overflowWrap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overflowX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overflowY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overrideColors", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overscrollBehavior", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overscrollBehaviorBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overscrollBehaviorInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overscrollBehaviorX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overscrollBehaviorY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "pad", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "padding", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingBlockEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingBlockStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingBottom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingInlineEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingInlineStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingLeft", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingRight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paddingTop", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "page", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "pageBreakAfter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "pageBreakBefore", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "pageBreakInside", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "pageOrientation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "paintOrder", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "perspective", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "perspectiveOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "placeContent", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "placeItems", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "placeSelf", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "pointerEvents", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "position", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "prefix", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "quotes", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "r", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "range", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "resize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "right", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "rotate", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "rowGap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "rubyPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "rx", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "ry", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scale", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollBehavior", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMargin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginBlockEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginBlockStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginBottom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginInlineEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginInlineStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginLeft", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginRight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollMarginTop", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPadding", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingBlock", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingBlockEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingBlockStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingBottom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingInline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingInlineEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingInlineStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingLeft", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingRight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollPaddingTop", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollSnapAlign", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollSnapStop", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollSnapType", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollTimeline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollTimelineAxis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollTimelineName", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "scrollbarGutter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "shapeImageThreshold", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "shapeMargin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "shapeOutside", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "shapeRendering", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "size", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "sizeAdjust", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "speak", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "speakAs", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "src", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "stopColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "stopOpacity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "stroke", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeDasharray", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeDashoffset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeLinecap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeLinejoin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeMiterlimit", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeOpacity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "strokeWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "suffix", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "symbols", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "syntax", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "system", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "tabSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "tableLayout", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textAlign", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textAlignLast", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textAnchor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textCombineUpright", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textDecoration", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textDecorationColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textDecorationLine", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textDecorationSkipInk", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textDecorationStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textDecorationThickness", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textEmphasis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textEmphasisColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textEmphasisPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textEmphasisStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textIndent", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textOrientation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textOverflow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textRendering", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textShadow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textSizeAdjust", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textTransform", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textUnderlineOffset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textUnderlinePosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "textWrap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "top", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "touchAction", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transform", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transformBox", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transformOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transformStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transitionDelay", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transitionDuration", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transitionProperty", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "transitionTimingFunction", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "translate", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "unicodeBidi", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "unicodeRange", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "userSelect", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "vectorEffect", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "verticalAlign", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "viewTimeline", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "viewTimelineAxis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "viewTimelineInset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "viewTimelineName", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "viewTransitionName", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "visibility", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAlignContent", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAlignItems", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAlignSelf", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationDelay", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationDirection", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationDuration", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationFillMode", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationIterationCount", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationName", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationPlayState", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAnimationTimingFunction", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAppRegion", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitAppearance", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBackfaceVisibility", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBackgroundClip", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBackgroundOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBackgroundSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderAfter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderAfterColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderAfterStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderAfterWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderBefore", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderBeforeColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderBeforeStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderBeforeWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderBottomLeftRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderBottomRightRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderEndColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderEndStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderEndWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderHorizontalSpacing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderImage", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderStartColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderStartStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderStartWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderTopLeftRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderTopRightRadius", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBorderVerticalSpacing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxAlign", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxDecorationBreak", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxDirection", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxFlex", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxOrdinalGroup", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxOrient", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxPack", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxReflect", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxShadow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitBoxSizing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitClipPath", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnBreakAfter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnBreakBefore", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnBreakInside", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnCount", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnGap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnRule", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnRuleColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnRuleStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnRuleWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnSpan", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumnWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitColumns", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFilter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlex", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlexBasis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlexDirection", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlexFlow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlexGrow", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlexShrink", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFlexWrap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFontFeatureSettings", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitFontSmoothing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitHighlight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitHyphenateCharacter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitJustifyContent", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitLineBreak", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitLineClamp", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitLocale", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitLogicalHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitLogicalWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMarginAfter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMarginBefore", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMarginEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMarginStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMask", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskBoxImage", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskBoxImageOutset", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskBoxImageRepeat", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskBoxImageSlice", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskBoxImageSource", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskBoxImageWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskClip", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskComposite", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskImage", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskPositionX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskPositionY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskRepeat", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskRepeatX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskRepeatY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaskSize", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaxLogicalHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMaxLogicalWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMinLogicalHeight", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitMinLogicalWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitOpacity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitOrder", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPaddingAfter", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPaddingBefore", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPaddingEnd", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPaddingStart", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPerspective", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPerspectiveOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPerspectiveOriginX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPerspectiveOriginY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitPrintColorAdjust", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitRtlOrdering", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitRubyPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitShapeImageThreshold", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitShapeMargin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitShapeOutside", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTapHighlightColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextCombine", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextDecorationsInEffect", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextEmphasis", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextEmphasisColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextEmphasisPosition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextEmphasisStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextFillColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextOrientation", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextSecurity", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextSizeAdjust", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextStroke", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextStrokeColor", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTextStrokeWidth", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransform", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransformOrigin", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransformOriginX", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransformOriginY", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransformOriginZ", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransformStyle", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransition", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransitionDelay", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransitionDuration", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransitionProperty", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitTransitionTimingFunction", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitUserDrag", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitUserModify", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitUserSelect", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "webkitWritingMode", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "whiteSpace", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "whiteSpaceCollapse", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "widows", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "width", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "willChange", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "wordBreak", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "wordSpacing", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "wordWrap", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "writingMode", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "x", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "y", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "zIndex", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "zoom", {configurable:true, enumerable:true, writable:true, value:""});
bodavm.toolsFunc.defineProperty(bodavm.memory.notDefined['CSSStyleDeclaration'], "overscroll-behavior", {configurable:true, enumerable:true, writable:true, value:""});
